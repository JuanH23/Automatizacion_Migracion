# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Login.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5.QtWidgets import (QApplication,QLabel,QWidget,QLineEdit,QPushButton,QMessageBox,QCheckBox)
from PyQt5.QtGui import QFont,QPixmap
from muestra_prueba import MiApp
from Config_User import ConfigUsuarioView
from dotenv import set_key,dotenv_values

class Login(QWidget):
        def __init__(self):
            super().__init__()
            
            self.inicializar()
        #Ventana principal vacia
        def inicializar(self):
            self.setGeometry(100,100,350,250)
            self.setWindowTitle("Login")
            self.generar_formulario()
            self.show()

        def generar_formulario(self):
             #Label de usuario
             self.is_loged=False
             user_Label=QLabel(self)
             user_Label.setText("Usuario:")
             user_Label.setFont(QFont('Arial',10))
             user_Label.move(20,54)
             

             #Line edit para ingresar el usuario
             self.user_input= QLineEdit(self)
             self.user_input.resize(250,24)
             self.user_input.move(90,50)
            #Label Password
             self.is_loged=False
             password_Label=QLabel(self)
             password_Label.setText("Password:")
             password_Label.setFont(QFont('Arial',10))
             password_Label.move(20,85)
             

             #Line edit para ingresar Password
             self.password_input= QLineEdit(self)
             self.password_input.resize(250,24)
             self.password_input.move(90,82)
             #Echo_mode se usa para no mostrar la contraseña en texto plano
             self.password_input.setEchoMode(
                  QLineEdit.EchoMode.Password
             )
             #Checkbox para poder visualizar o no, la contraseña
             self.check_view_pass= QCheckBox(self)
             self.check_view_pass.setText("Ver password")
             self.check_view_pass.move(90,110)
             self.check_view_pass.toggled.connect(self.mostrar_pass)

             #Botones
             login_button=QPushButton(self)
             login_button.setText("Login")
             login_button.resize(320,24)
             login_button.move(20,140)
             login_button.clicked.connect(self.login)
             
             #*Button Config
             Config_button=QPushButton(self)
             Config_button.setText("Configuración del Sharepoint")
             Config_button.resize(320,24)
             Config_button.move(20,180)
             Config_button.clicked.connect(self.config_usuario)

        def mostrar_pass(self,clicked):
                  if clicked:
                    self.password_input.setEchoMode(
                        QLineEdit.EchoMode.Normal
                    )
                  else:
                        self.password_input.setEchoMode(
                        QLineEdit.EchoMode.Password
                    )          
                  
        def login(self):
                  users=[]
                  user_path='usuarios.txt'

                  try:
                    with open(user_path,'r') as f:
                          for linea in f:
                            users.append(linea.strip("\n"))
                    login_information=f"{self.user_input.text()},{self.password_input.text()}"
                    Username=self.user_input.text()
                    Password=self.password_input.text()
                    print(f'Correo==>{Username}')
                    print(f'Pass==>{Password}')
                    env=dotenv_values(".env")
                    set_key(".env","sharepoint_email",Username)#input("Digite correo==>") cambiar por la variable del qt
                    USERNAME=env["sharepoint_email"]
                    set_key(".env","sharepoint_password",Password)#
                    PASSWORD=env["sharepoint_password"]
                    if login_information in users:
                         QMessageBox.information(self,"Inicio sesion",
                         "Inicio sesion exitoso",
                         QMessageBox.StandardButton.Ok,
                         QMessageBox.StandardButton.Ok)
                         self.is_loged=True
                         self.close()
                         self.open_main()
                    else:
                         QMessageBox.warning(self,"Error Message",
                         "Credenciales incorrectas",
                         QMessageBox.StandardButton.Close,
                         QMessageBox.StandardButton.Close)
                  except FileNotFoundError as e: 
                         QMessageBox.warning(self,"Error Message",
                         f"Base de datos de usuario no encontrada: {e}",
                         QMessageBox.StandardButton.Close,
                         QMessageBox.StandardButton.Close)
                  except Exception as u:
                          QMessageBox.warning(self, "Error Message",
                         f'Error en el servidor: {u}',
                         QMessageBox.StandardButton.Close,
                         QMessageBox.StandardButton.Close)
        def open_main(self):
              self.main= MiApp()
              self.main.show()
        def config_usuario(self):
            self.configu_user=ConfigUsuarioView()
            self.configu_user.show()


if __name__ == "__main__":
    import sys
    app = QApplication(sys.argv)
    Login= Login()
    sys.exit(app.exec_())
